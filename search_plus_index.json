{"./":{"url":"./","title":"Introduction","keywords":"","body":"1. Introduction1. Introduction XS Zhao®Stay Foolish, Stay HungryCopyright © hansonzhao007 all right reserved, powered by aleen42modified at 2018-05-30 10:25:25 0 issues reported "},"content/linux/ssh.html":{"url":"content/linux/ssh.html","title":"ssh","keywords":"","body":"1. 内网穿透1.1. Transparent Multi-Hop1.2. ProxyCommand with -W1.3. Local Port Forwarding2. VPN 代理2.1. How to use a SOCKS Proxy 端口转发1. 内网穿透 # --------------- --------------- ------------------- # | SSH client |==========| Jump host |----------| Target server | # --------------- --------------- ------------------- # WAN IP:129.107.35.245 LAN IP:10.0.0.30 1.1. Transparent Multi-Hop reference # 相当于 SSH client 链接到 Jump host 以后，再从 Jump host ssh 链接到 Target server # 有多少次跳转就要输入多少次密码 ssh -A -t hanson@129.107.35.245 ssh -A -t hanson@10.0.0.30 1.2. ProxyCommand with -W # 该方法需要在 Jump host 和 Target server 上的.ssh目录中的 authorized_keys # ----------------------------------------------------------------- # 1. proxy server configuration # ----------------------------------------------------------------- Host jump_host hostname 129.107.35.245 user hanson # ----------------------------------------------------------------- # 2. Set Jump host proxy # ----------------------------------------------------------------- Host uhead Host u30 HostName 10.0.0.30 ProxyCommand ssh -q -W %h:%p uhead user hanson # 之后直接在 SSH client 上 ssh u30 就可以登录到 Target server 了。 1.3. Local Port Forwarding # 该方法需要在 Jump host 上运行下面的 ssh 命令，然后 SSH client 在指定的端口进行 # ssh 链接，才能访问到 Target server. 该方法并不需要添加 public key，只要用户密码 # 1.run command in Jump host: ssh -2fqnNT -L 129.107.35.245:8888:10.0.0.30:22 # Then we can see a port forwarding thread: # [hanson@uhead ~]$ ss -tnl # LISTEN 0 128 129.107.35.245:8888 0.0.0.0:* # 2.ssh Jump host with specified port in SSH client ssh xxz1499@129.107.35.245 -p 8888 xxz1499@129.107.35.245 password: # After login, we are in Target server. # 该方法的好处是：比如我在 Target server 新建了 N 个学生账户，那么并不需要修改 Host server， # 在 SSH client 处登录时候，只需要修改相应的 user name 即可。 2. VPN 代理 2.1. How to use a SOCKS Proxy 端口转发 # ssh -D # ================== # 1. 本地机器配置 # a) 在本地创建 ssh key，然后在 server 端添加该 key。比如 hanson user 的 key # b) 在本地设置 ssh 转发 tunnel。下面相当于把对本地 9999 端口的访问转发到了翻墙服务器上 # # -D: Tells SSH that we want a SOCKS tunnel on the specified port number (you can choose a number between 1025-65536) # -f: Forks the process to the background # -C: Compresses the data before sending it # -q: Uses quiet mode # -N: Tells SSH that no command will be sent once the tunnel is up # ================== ssh -2fqnNT -D 9999 hanson@141.217.24.182 # ================== # 2. 在 firefox 里面设置 proxy # Manual proxy configuration: # SOCKS Host: localhost Port:9999 # ================== XS Zhao®Stay Foolish, Stay HungryCopyright © hansonzhao007 all right reserved, powered by aleen42modified at 2018-06-03 06:23:12 0 issues reported "},"content/linux/skills.html":{"url":"content/linux/skills.html","title":"skills","keywords":"","body":"1. rename 重命名1. rename 重命名 # 这里使用 cut 命令截取文件名中想要的一段字符，然后再尾部添加 .s 共同构成新的文件名。 for name in *.s do # 取出第 11 到 17 的字符，并和 \".s\" 拼接在一起 newname=\"$(echo \"$name\" | cut -c 11-17)\".s mv \"$name\" \"$newname\" done XS Zhao®Stay Foolish, Stay HungryCopyright © hansonzhao007 all right reserved, powered by aleen42modified at 2018-06-07 12:46:18 0 issues reported "},"content/linux/inode.html":{"url":"content/linux/inode.html","title":"inode","keywords":"","body":" `ls -i`：显示文件的inode `stat filename`：显示文件的所有状态信息，包括大小，inode id，link 数目，创建时间，修改时间等 如果有一个文件名很奇怪，无法使用正常的 rm 命令删除，比如：“ab* 那么可以使用 find . -inum xxxx -delete 命令删除 ln file1 filelink1：给file1创建一个名字叫做filelink1的hard link，具有相同的 inode id。加上参数 -s 则创建 softlink mac@macs-MacBook  ~/Code/coding/S2/S2   master ●  ls -i 4304576742 main.cpp mac@macs-MacBook  ~/Code/coding/S2/S2   master ●  ln main.cpp t.c mac@macs-MacBook  ~/Code/coding/S2/S2   master ●  ls -i 4304576742 main.cpp 4304576742 t.c mac@macs-MacBook  ~/Code/coding/S2/S2   master ●  df -i：查看磁盘inode资源的使用情况 XS Zhao®Stay Foolish, Stay HungryCopyright © hansonzhao007 all right reserved, powered by aleen42modified at 2018-06-13 23:03:55 0 issues reported "},"content/web/gitbook.html":{"url":"content/web/gitbook.html","title":"Gitbook","keywords":"","body":"1. Install & initial a gitbook1.1. Install Gitbook1.2. Install gulp and yarn1.3. Using plugin2. Using gulp2.1. Compress html2.2. Publish static website to github pages1. Install & initial a gitbook 1.1. Install Gitbook npm install -g gitbook-cli git init gitbook-test cd gitbook-test gitbook init 1.2. Install gulp and yarn npm install -g gulp npm install -g yarn npm install --save gulp-htmlmin # used to compress html yarn add gulp gulp-gh-pages gulp-load-plugins --dev # used to publish static page to github yarn init # this will create package.json file 1.3. Using plugin create book.json file. { \"root\": \"./\", // web root directory \"title\": \"cheatsheet\", \"author\": \"XS Zhao\", \"plugins\": [\"prism\", \"-highlight\", \"addcssjs\", \"anchor-navigation-ex\" ], // the plugin you want to use \"pluginsConfig\": { \"addcssjs\": { \"js\": [\"./custom/my.js\"], \"css\": [\"./custom/my.css\"] } } } in the plugins fields, add the plugins your want. Then gitbook install mac@macs-MacBook  ~/Project/test  gitbook install info: installing 3 plugins using npm@3.9.2 info: info: installing plugin \"prism\" info: install plugin \"prism\" (*) from NPM with version 2.3.0 fetchMetadata → network ▀ ╢███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟ 2. Using gulp Create a new file called gulpfile.js. 2.1. Compress html reference Add following code in gulpfile.js: var gulp = require('gulp'); var htmlmin = require('gulp-htmlmin'); // Compress the html gulp.task('minify', function() { return gulp.src('./_book/**/*.html') .pipe(htmlmin({collapseWhitespace: true})) .pipe(gulp.dest('./_book/')); }); usage: gulp minify 2.2. Publish static website to github pages reference Add following code: const gulp = require('gulp'); const gulpLoadPlugins = require('gulp-load-plugins'); const $ = gulpLoadPlugins(); // Publishes the site to GitHub Pages gulp.task('publish', () => { console.log('Publishing to GH Pages'); return gulp.src('./_book/**/*') .pipe($.ghPages({ origin: 'origin', branch: 'gh-pages' })); }); usage: gulp publish XS Zhao®Stay Foolish, Stay HungryCopyright © hansonzhao007 all right reserved, powered by aleen42modified at 2018-06-03 09:01:14 0 issues reported "}}